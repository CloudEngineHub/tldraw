/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely'

export type Generated<T> =
	T extends ColumnType<infer S, infer I, infer U>
		? ColumnType<S, I | undefined, U>
		: ColumnType<T, T | undefined, T>

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>

export type Timestamp = ColumnType<Date, Date | string, Date | string>

export interface File {
	createdAt: number
	id: string
	isDeleted: boolean
	isEmpty: boolean
	lastPublished: number
	name: string
	ownerAvatar: string
	ownerId: string
	ownerName: string
	published: boolean
	publishedSlug: string
	shared: boolean
	sharedLinkType: string
	thumbnail: string
	updatedAt: number
}

export type FilePartial = Partial<File> & {
	id: File['id']
}

export interface FileState {
	fileId: string
	firstVisitAt: number | null
	isFileOwner: boolean | null
	isPinned: boolean | null
	lastEditAt: number | null
	lastSessionState: string | null
	lastVisitAt: number | null
	userId: string
}

export interface FileStatePartial extends Partial<FileState> {
	fileId: FileState['fileId']
	userId: FileState['userId']
}

export interface MigrationsAppliedMigrations {
	applied_at: Generated<Timestamp | null>
	filename: string
}

export interface ReplicatorBootId {
	bootId: string
	replicatorId: string
}

export interface User {
	animationSpeed: number | null
	avatar: string
	color: string
	colorScheme: string | null
	createdAt: number
	edgeScrollSpeed: number | null
	email: string
	exportBackground: boolean
	exportFormat: string
	exportPadding: boolean
	exportTheme: string
	flags: string
	id: string
	isDynamicSizeMode: boolean | null
	isPasteAtCursorMode: boolean | null
	isSnapMode: boolean | null
	isWrapMode: boolean | null
	locale: string | null
	name: string
	updatedAt: number
}

export type UserPartial = Partial<User> & {
	id: User['id']
}

export interface UserBootId {
	bootId: string
	userId: string
}

export interface UserMutationNumber {
	mutationNumber: Int8
	userId: string
}

export interface DB {
	file: File
	file_state: FileState
	'migrations.applied_migrations': MigrationsAppliedMigrations
	replicator_boot_id: ReplicatorBootId
	user: User
	user_boot_id: UserBootId
	user_mutation_number: UserMutationNumber
}
